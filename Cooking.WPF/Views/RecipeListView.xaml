<UserControl
    x:Class="Cooking.WPF.Views.RecipeListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:System="clr-namespace:System;assembly=System.Runtime"
    xmlns:converters="clr-namespace:Cooking.WPF.Converters"
    xmlns:design="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Cooking.WPF"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:viewModels="clr-namespace:Cooking.WPF.ViewModels"
    xmlns:wpftk="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
    design:DataContext="{design:DesignInstance viewModels:RecipeListViewModel}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    mc:Ignorable="design">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <converters:InvertedBooleanToVisibilityConverter x:Key="invertedBooleanToVisibilityConverter" />
        <converters:NullImageConverter x:Key="nullConverter" />
        <converters:SimpleBooleanConverter
            x:Key="invertedBooleanConverter"
            False="True"
            True="False" />
        <converters:LastCookedConverter x:Key="lastCookedConverter" />
        <Style
            x:Key="cardStyle"
            BasedOn="{StaticResource {x:Type materialDesign:Card}}"
            TargetType="materialDesign:Card">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation
                                    Storyboard.TargetProperty="Background.Color"
                                    To="Gray"
                                    Duration="0:0:0.1" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard FillBehavior="Stop">
                                <ColorAnimation
                                    Storyboard.TargetProperty="Background.Color"
                                    To="Transparent"
                                    Duration="0:0:0.3" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding LoadedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="55" />
        </Grid.RowDefinitions>

        <!--  Header panel with view toggle and filter text  -->
        <DockPanel>
            <ToggleButton IsChecked="{Binding IsTilesView}" Style="{StaticResource MediumToggleButton}">
                <icons:PackIconModern Kind="TilesNine" Style="{StaticResource MediumIcon}" />
            </ToggleButton>
            <ToggleButton
                Margin="10,0,0,0"
                IsChecked="{Binding IsTilesView, Converter={StaticResource invertedBooleanConverter}}"
                Style="{StaticResource MediumToggleButton}">
                <icons:PackIconModern Kind="List" Style="{StaticResource MediumIcon}" />
            </ToggleButton>
            <TextBox
                Margin="10,0,0,0"
                mahapps:TextBoxHelper.ClearTextButton="True"
                mahapps:TextBoxHelper.UseFloatingWatermark="True"
                mahapps:TextBoxHelper.Watermark="{Binding SearchHelpTextCaption, Mode=OneTime}"
                Text="{Binding FilterText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=700}"
                Visibility="{Binding IsFilterable, Converter={StaticResource booleanToVisibilityConverter}}" />
        </DockPanel>

        <!--  Recipies as tiles view  -->
        <wpftk:VirtualizingItemsControl
            Name="RecipiesList"
            Grid.Row="1"
            Margin="0,5,0,0"
            ItemsSource="{Binding RecipiesSource.View}"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling"
            VirtualizingStackPanel.IsVirtualizing="True"
            Visibility="{Binding IsTilesView, Converter={StaticResource booleanToVisibilityConverter}}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <materialDesign:Card
                        Width="140"
                        Height="230"
                        Margin="5"
                        Style="{StaticResource cardStyle}">
                        <Grid>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDown">
                                    <i:InvokeCommandAction Command="{Binding ElementName=RecipiesList, Path=DataContext.ViewRecipeCommand}" CommandParameter="{Binding ID}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="5*" />
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Image
                                HorizontalAlignment="Center"
                                VerticalAlignment="Stretch"
                                Source="{Binding FullPath, TargetNullValue={StaticResource DefaultRecipeImg}}"
                                Stretch="UniformToFill" />

                            <TextBlock
                                Grid.Row="1"
                                Margin="8,4"
                                Text="{Binding Name}"
                                TextTrimming="WordEllipsis"
                                TextWrapping="Wrap" />
                        </Grid>
                    </materialDesign:Card>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <wpftk:VirtualizingWrapPanel ItemSize="145 240" />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </wpftk:VirtualizingItemsControl>

        <!--  Recipies as list view  -->
        <DataGrid
            Grid.Row="1"
            Margin="0,5,0,0"
            AutoGenerateColumns="False"
            Background="Transparent"
            IsReadOnly="True"
            ItemsSource="{Binding RecipiesSource.View}"
            ScrollViewer.CanContentScroll="True"
            VirtualizingPanel.ScrollUnit="Pixel"
            VirtualizingPanel.VirtualizationMode="Recycling"
            VirtualizingStackPanel.IsVirtualizing="True"
            Visibility="{Binding IsTilesView, Converter={StaticResource invertedBooleanToVisibilityConverter}}">
            <DataGrid.Columns>

                <!--  Image column  -->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Image
                                Width="50"
                                Height="50"
                                Source="{Binding FullPath, TargetNullValue={StaticResource DefaultRecipeImg}}"
                                Stretch="Uniform">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction Command="{Binding ElementName=RecipiesList, Path=DataContext.ViewRecipeCommand}" CommandParameter="{Binding ID}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Image>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Name column  -->
                <DataGridTemplateColumn SortMemberPath="Name">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{lex:Loc Name}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseUp">
                                        <i:InvokeCommandAction Command="{Binding ElementName=RecipiesList, Path=DataContext.ViewRecipeCommand}" CommandParameter="{Binding ID}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Rating column  -->
                <DataGridTextColumn Binding="{Binding Rating}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{lex:Loc Rating}" />
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>

                <!--  Last cooked column  -->
                <DataGridTemplateColumn SortMemberPath="LastCooked">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{lex:Loc LastCooked, Converter={StaticResource lastCookedConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>

                                <local:StringFormatProxy x:Name="newRecipeProxy" Value="{lex:Loc NewRecipe}" />

                                <TextBlock TextWrapping="Wrap">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Text" Value="{Binding LastCooked, Converter={StaticResource lastCookedConverter}}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding LastCooked}" Value="{x:Static System:Int32.MaxValue}">
                                                    <Setter Property="Text" Value="{Binding Result, ElementName=newRecipeProxy}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
            <DataGrid.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </DataGrid.ItemsPanel>
        </DataGrid>

        <!--  No recipies found placeholder  -->
        <TextBlock
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            FontSize="24"
            Foreground="#ffbbbbbb"
            Text="{lex:Loc NoRecipiesFound}"
            Visibility="{Binding RecipiesNotFound, Converter={StaticResource booleanToVisibilityConverter}}" />

        <!--  Buttons  -->
        <StackPanel
            Grid.Row="2"
            Margin="0,5,0,0"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Margin="10,0,0,0"
                Command="{Binding AddRecipeCommand}"
                Style="{StaticResource AddButton}" />
        </StackPanel>
    </Grid>
</UserControl>
