<UserControl
    x:Class="Cooking.WPF.Views.GeneratedWeekView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Cooking.WPF.Converters"
    xmlns:design="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="clr-namespace:Cooking.Data.Model;assembly=Cooking.Data"
    xmlns:viewModels="clr-namespace:Cooking.WPF.ViewModels"
    design:DataContext="{design:DesignInstance viewModels:GeneratedWeekViewModel}"
    mahapps:DialogParticipation.Register="{Binding}"
    mc:Ignorable="design">
    <UserControl.InputBindings>
        <KeyBinding Key="Esc" Command="{Binding CloseCommand}" />
    </UserControl.InputBindings>

    <UserControl.Resources>
        <converters:SimpleBooleanConverter
            x:Key="oppositeConverter"
            False="True"
            True="False" />
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
    </UserControl.Resources>

    <Grid Margin="20 10">
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition />
            <RowDefinition Height="70" />
        </Grid.RowDefinitions>
        <TextBlock FontSize="24" Text="{lex:Loc GeneratedRecipies}" />

        <!--  Grid of suggested days  -->
        <DataGrid
            Grid.Row="1"
            AutoGenerateColumns="False"
            Background="Transparent"
            BorderThickness="0"
            CanUserAddRows="False"
            CanUserSortColumns="False"
            IsReadOnly="True"
            ItemsSource="{Binding Days}">
            <DataGrid.Columns>
                <DataGridTextColumn Binding="{Binding DayName}" Header="{lex:Loc Day}" />

                <!--  Recipe column  -->
                <DataGridTemplateColumn Width="*" Header="{lex:Loc Dinner}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <!--  Text to be shows if no suited recipe is found  -->
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Foreground="Red"
                                    Text="{lex:Loc NoRecipeFitsFilter}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SpecificRecipe, Converter={StaticResource IsNotNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Recipe, Converter={StaticResource IsNotNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!--  Control to show when recipe is found  -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SpecificRecipe, Converter={StaticResource IsNotNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Recipe, Converter={StaticResource IsNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <!--  Get another recipe for a filter  -->
                                    <Button
                                        Margin="5 0 0 0"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.GetAlternativeRecipeCommand}"
                                        CommandParameter="{Binding}"
                                        Foreground="LightBlue"
                                        Style="{StaticResource SmallButton}"
                                        ToolTipService.IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource oppositeConverter}}"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTipService.ToolTip="{lex:Loc NoAlternatives}">
                                        <icons:PackIconModern Kind="Refresh" Style="{StaticResource SmallIcon}" />
                                    </Button>

                                    <!--  Suggested recipe name  -->
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Recipe.Name}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseUp">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ShowRecipeCommand}" CommandParameter="{Binding Recipe.ID}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>

                                    <!--  Calorie type image (circle)  -->
                                    <lex:LocProxy
                                        x:Name="CalorieTypeNameProxy"
                                        PrependType="True"
                                        Source="{Binding Recipe.CalorieType}" />
                                    <Ellipse
                                        Width="15"
                                        Height="15"
                                        Margin="10 5 0 0"
                                        VerticalAlignment="Top"
                                        ToolTip="{Binding ElementName=CalorieTypeNameProxy, Path=Result}">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Recipe.CalorieType}" Value="0">
                                                        <Setter Property="Fill" Value="Gray" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Recipe.CalorieType}" Value="{x:Static model:CalorieType.Fitness}">
                                                        <Setter Property="Fill" Value="Green" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Recipe.CalorieType}" Value="{x:Static model:CalorieType.Protein}">
                                                        <Setter Property="Fill" Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Recipe.CalorieType}" Value="{x:Static model:CalorieType.Bad}">
                                                        <Setter Property="Fill" Value="Orange" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Recipe.CalorieType}" Value="{x:Static model:CalorieType.Sweets}">
                                                        <Setter Property="Fill" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                </StackPanel>

                                <!--  Control to show when recipe is manually set  -->
                                <StackPanel Orientation="Horizontal" Visibility="{Binding SpecificRecipe, Converter={StaticResource IsNotNullToVisibilityConverter}}">

                                    <!--  Selected recipe name  -->
                                    <TextBlock VerticalAlignment="Center" Text="{Binding SpecificRecipe.Name}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseUp">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ShowRecipeCommand}" CommandParameter="{Binding SpecificRecipe.ID}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>

                                    <!--  Calorie type image (circle)  -->
                                    <lex:LocProxy
                                        x:Name="SpecificCalorieTypeNameProxy"
                                        PrependType="True"
                                        Source="{Binding Recipe.CalorieType}" />
                                    <Ellipse
                                        Width="15"
                                        Height="15"
                                        Margin="10 5 0 0"
                                        VerticalAlignment="Top"
                                        ToolTip="{Binding ElementName=SpecificCalorieTypeNameProxy, Path=Result}">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SpecificRecipe.CalorieType}" Value="0">
                                                        <Setter Property="Fill" Value="Gray" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding SpecificRecipe.CalorieType}" Value="{x:Static model:CalorieType.Fitness}">
                                                        <Setter Property="Fill" Value="Green" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding SpecificRecipe.CalorieType}" Value="{x:Static model:CalorieType.Protein}">
                                                        <Setter Property="Fill" Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding SpecificRecipe.CalorieType}" Value="{x:Static model:CalorieType.Bad}">
                                                        <Setter Property="Fill" Value="Orange" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding SpecificRecipe.CalorieType}" Value="{x:Static model:CalorieType.Sweets}">
                                                        <Setter Property="Fill" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>

                                    <!--  Remove selected manually recipe  -->
                                    <Button
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.DeleteRecipeManuallyCommand}"
                                        CommandParameter="{Binding}"
                                        Style="{StaticResource SmallDeleteButton}" />
                                </StackPanel>

                                <!--  Select recipe manually  -->
                                <Button
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetRecipeManuallyCommand}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource SmallEditButton}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <!--  Garnish column  -->
                <DataGridTemplateColumn Width="*" Header="{lex:Loc Garnish}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <!--  Text to be shows if no suited garnish is found  -->
                                <TextBlock
                                    VerticalAlignment="Center"
                                    Foreground="Red"
                                    Text="{lex:Loc NoGarnish}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Garnish, Converter={StaticResource IsNotNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <!--  Control to show when garnish is found  -->
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Garnish, Converter={StaticResource IsNullToVisibilityConverter}}" Value="Visible">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </StackPanel.Style>

                                    <!--  Get another garnish for a filter  -->
                                    <Button
                                        Margin="5 0 0 0"
                                        VerticalAlignment="Center"
                                        BorderThickness="0"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.GetAlternativeGarnishCommand}"
                                        CommandParameter="{Binding}"
                                        Foreground="LightBlue"
                                        Style="{StaticResource SmallButton}"
                                        ToolTipService.IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource oppositeConverter}}"
                                        ToolTipService.ShowOnDisabled="True"
                                        ToolTipService.ToolTip="{lex:Loc NoAlternatives}">
                                        <icons:PackIconModern Kind="Refresh" Style="{StaticResource SmallIcon}" />
                                    </Button>

                                    <!--  Suggested garnish name  -->
                                    <TextBlock VerticalAlignment="Center" Text="{Binding Garnish.Name}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseUp">
                                                <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.ShowRecipeCommand}" CommandParameter="{Binding Garnish.ID}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBlock>

                                    <!--  Calorie type image (circle)  -->
                                    <lex:LocProxy
                                        x:Name="CalorieTypeNameProxy"
                                        PrependType="True"
                                        Source="{Binding Garnish.CalorieType}" />
                                    <Ellipse
                                        Width="15"
                                        Height="15"
                                        Margin="10 5 0 0"
                                        VerticalAlignment="Top"
                                        ToolTip="{Binding ElementName=CalorieTypeNameProxy, Path=Result}">
                                        <Ellipse.Style>
                                            <Style TargetType="Ellipse">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Garnish.CalorieType}" Value="0">
                                                        <Setter Property="Fill" Value="Gray" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Garnish.CalorieType}" Value="{x:Static model:CalorieType.Fitness}">
                                                        <Setter Property="Fill" Value="Green" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Garnish.CalorieType}" Value="{x:Static model:CalorieType.Protein}">
                                                        <Setter Property="Fill" Value="Yellow" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Garnish.CalorieType}" Value="{x:Static model:CalorieType.Bad}">
                                                        <Setter Property="Fill" Value="Orange" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Garnish.CalorieType}" Value="{x:Static model:CalorieType.Sweets}">
                                                        <Setter Property="Fill" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Ellipse.Style>
                                    </Ellipse>
                                </StackPanel>

                                <!--  Select garnish manually  -->
                                <Button
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    Command="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=DataContext.SetGarnishManuallyCommand}"
                                    CommandParameter="{Binding}"
                                    Style="{StaticResource SmallEditButton}" />
                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!--  Buttons  -->
        <StackPanel
            Grid.Row="2"
            HorizontalAlignment="Center"
            Orientation="Horizontal">
            <Button
                Command="{Binding ReturnCommand}"
                Foreground="White"
                Style="{StaticResource BigButton}">
                <icons:Modern
                    Width="20"
                    Height="20"
                    Kind="Return" />
            </Button>
            <Button
                Margin="10 0 0 0"
                Command="{Binding OkCommand}"
                Style="{StaticResource OkButton}" />
            <Button
                Margin="10 0 0 0"
                Command="{Binding CloseCommand}"
                Style="{StaticResource CancelButton}" />
        </StackPanel>
    </Grid>
</UserControl>
