<mahapps:MetroWindow
    x:Class="Cooking.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:lex="http://wpflocalizeextension.codeplex.com"
    xmlns:local="clr-namespace:Cooking"
    xmlns:mahapps="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:materialDesignConverters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
    xmlns:prism="http://prismlibrary.com/"
    Title="{lex:Loc AppTitle}"
    Width="1000"
    Height="650"
    lex:LocalizeDictionary.DisableCache="False"
    lex:LocalizeDictionary.IncludeInvariantCulture="False"
    lex:LocalizeDictionary.Provider="{Binding LocalizationProvider}"
    prism:ViewModelLocator.AutoWireViewModel="True"
    ShowDialogsOverTitleBar="False">
    <mahapps:MetroWindow.Resources>
        <ResourceDictionary>
            <!-- From https://github.com/MahApps/MahApps.Metro/blob/develop/src/MahApps.Metro.Samples/MahApps.Metro.Demo/HamburgerMenuRipple/HamburgerMenuRipple.xaml -->
            <!-- Latest commit 17.11.19 -->
            <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type mahapps:HamburgerMenuIconItem}">
                <Grid Height="48">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="48" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <ContentControl
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Content="{Binding Icon}"
                        Focusable="False"
                        IsTabStop="False" />
                    <TextBlock
                        Grid.Column="1"
                        VerticalAlignment="Center"
                        FontSize="16"
                        Text="{Binding Label}" />
                </Grid>
            </DataTemplate>

            <materialDesignConverters:BrushRoundConverter x:Key="BrushRoundConverter" />

            <Style
                x:Key="HamburgerMenuCreatorsItemStyle"
                BasedOn="{StaticResource MahApps.Styles.ListBoxItem.HamburgerMenuItem}"
                TargetType="{x:Type ListBoxItem}">
                <Setter Property="mahapps:ItemHelper.ActiveSelectionBackgroundBrush" Value="Transparent" />
                <Setter Property="mahapps:ItemHelper.ActiveSelectionForegroundBrush" Value="{StaticResource MahApps.Brushes.AccentBase}" />
                <Setter Property="mahapps:ItemHelper.DisabledForegroundBrush" Value="{StaticResource MahApps.Brushes.GrayNormal}" />
                <Setter Property="mahapps:ItemHelper.DisabledSelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mahapps:ItemHelper.DisabledSelectedForegroundBrush" Value="{StaticResource MahApps.Brushes.GrayNormal}" />
                <Setter Property="mahapps:ItemHelper.HoverBackgroundBrush" Value="{StaticResource MahApps.Brushes.Gray9}" />
                <Setter Property="mahapps:ItemHelper.HoverSelectedBackgroundBrush" Value="{StaticResource MahApps.Brushes.Gray9}" />
                <Setter Property="mahapps:ItemHelper.SelectedBackgroundBrush" Value="Transparent" />
                <Setter Property="mahapps:ItemHelper.SelectedForegroundBrush" Value="{StaticResource MahApps.Brushes.AccentBase}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="{TemplateBinding RenderOptions.ClearTypeHint}">
                                <Border
                                    x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <Grid Margin="{TemplateBinding BorderThickness}">
                                    <Grid
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type mahapps:HamburgerMenu}}, Path=ShowSelectionIndicator, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Rectangle
                                            x:Name="SelectionIndicator"
                                            Width="{StaticResource HamburgerMenuSelectionIndicatorThemeWidth}"
                                            Height="{StaticResource HamburgerMenuSelectionIndicatorThemeHeight}"
                                            Fill="{TemplateBinding Foreground}"
                                            Focusable="False"
                                            Opacity="0.0" />
                                    </Grid>
                                    <materialDesign:Ripple
                                        Padding="{TemplateBinding Padding}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        Feedback="{TemplateBinding Foreground,
                                                                   Converter={StaticResource BrushRoundConverter}}"
                                        Focusable="False"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.SelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ItemHelper.SelectedBackgroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="SelectionIndicator" Property="Opacity" Value="1.0" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.ActiveSelectionForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ItemHelper.ActiveSelectionBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ItemHelper.HoverSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mahapps:ItemHelper.HoverBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>

                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.DisabledForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.DisabledBackgroundBrush), Mode=OneWay}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="False" />
                                        <Condition Property="IsSelected" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.DisabledSelectedForegroundBrush), Mode=OneWay}" />
                                    <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=(mahapps:ItemHelper.DisabledSelectedBackgroundBrush), Mode=OneWay}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="HamburgerMenuCreatorsStyle"
                BasedOn="{StaticResource {x:Type mahapps:HamburgerMenu}}"
                TargetType="{x:Type mahapps:HamburgerMenu}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="OptionsItemContainerStyle" Value="{StaticResource HamburgerMenuCreatorsItemStyle}" />
                <Setter Property="PaneBackground" Value="{DynamicResource WhiteBrush}" />
                <Setter Property="PaneForeground" Value="{DynamicResource TextBrush}" />
                <Setter Property="ShowSelectionIndicator" Value="True" />
            </Style>
        </ResourceDictionary>
    </mahapps:MetroWindow.Resources>

    <mahapps:MetroWindow.WindowButtonCommands>
        <mahapps:WindowButtonCommands Style="{StaticResource MahApps.Styles.WindowButtonCommands.Win10}" />
    </mahapps:MetroWindow.WindowButtonCommands>

    <mahapps:HamburgerMenu
        x:Name="HamburgerMenuControl"
        prism:RegionManager.RegionName="{x:Static local:Consts.MainContentRegion}"
        ItemInvoked="HamburgerMenuControl_OnItemInvoked"
        ItemTemplate="{StaticResource MenuItemTemplate}"
        ItemsSource="{Binding MenuItems}"
        OptionsItemsSource="{Binding OptionsMenuItems}"
        OpenPaneLength="160"
        OptionsItemTemplate="{StaticResource MenuItemTemplate}"
        SelectedItem="{Binding SelectedMenuItem, Mode=TwoWay}"
        Style="{StaticResource HamburgerMenuCreatorsStyle}" />

</mahapps:MetroWindow>